// <auto-generated />
using System;
using HouseFinder360.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HouseFinder360.Infrastructure.Migrations
{
    [DbContext(typeof(HouseFinder360DbContext))]
    partial class HouseFinder360DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HouseFinder360.Domain.Property.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("HouseFinder360.Domain.Property.Entities.PropertyPhoto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Container")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PropertyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyPhoto");
                });

            modelBuilder.Entity("HouseFinder360.Domain.Property.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("ElevatorsNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Heating")
                        .HasColumnType("text");

                    b.Property<string>("NumberOfRooms")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PropertyState")
                        .HasColumnType("text");

                    b.Property<int>("Purpose")
                        .HasColumnType("integer");

                    b.Property<int>("RegisterStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("HouseFinder360.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("UserRole")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HouseFinder360.Domain.Property.Entities.Address", b =>
                {
                    b.OwnsOne("HouseFinder360.Domain.Property.ValueObjects.Location", "City", b1 =>
                        {
                            b1.Property<long>("AddressId")
                                .HasColumnType("bigint");

                            b1.Property<double>("Latitude")
                                .HasColumnType("double precision")
                                .HasColumnName("CityLatitude");

                            b1.Property<double>("Longitude")
                                .HasColumnType("double precision")
                                .HasColumnName("CityLongitude");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("CityName");

                            b1.HasKey("AddressId");

                            b1.ToTable("Address");

                            b1.WithOwner()
                                .HasForeignKey("AddressId");
                        });

                    b.OwnsOne("HouseFinder360.Domain.Property.ValueObjects.Location", "Street", b1 =>
                        {
                            b1.Property<long>("AddressId")
                                .HasColumnType("bigint");

                            b1.Property<double>("Latitude")
                                .HasColumnType("double precision")
                                .HasColumnName("StreetLatitude");

                            b1.Property<double>("Longitude")
                                .HasColumnType("double precision")
                                .HasColumnName("StreetLongitude");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("StreetName");

                            b1.HasKey("AddressId");

                            b1.ToTable("Address");

                            b1.WithOwner()
                                .HasForeignKey("AddressId");
                        });

                    b.Navigation("City")
                        .IsRequired();

                    b.Navigation("Street")
                        .IsRequired();
                });

            modelBuilder.Entity("HouseFinder360.Domain.Property.Entities.PropertyPhoto", b =>
                {
                    b.HasOne("HouseFinder360.Domain.Property.Property", null)
                        .WithMany("Photos")
                        .HasForeignKey("PropertyId");
                });

            modelBuilder.Entity("HouseFinder360.Domain.Property.Property", b =>
                {
                    b.HasOne("HouseFinder360.Domain.Property.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("HouseFinder360.Domain.Property.ValueObjects.Area", "Area", b1 =>
                        {
                            b1.Property<Guid>("PropertyId")
                                .HasColumnType("uuid");

                            b1.Property<int>("SquadMeter")
                                .HasColumnType("integer")
                                .HasColumnName("Area");

                            b1.HasKey("PropertyId");

                            b1.ToTable("Properties");

                            b1.WithOwner()
                                .HasForeignKey("PropertyId");
                        });

                    b.OwnsOne("HouseFinder360.Domain.Property.ValueObjects.FloorInformation", "FloorInformation", b1 =>
                        {
                            b1.Property<Guid>("PropertyId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Floor")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("Floor");

                            b1.Property<string>("TotalFloors")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("TotalFloors");

                            b1.HasKey("PropertyId");

                            b1.ToTable("Properties");

                            b1.WithOwner()
                                .HasForeignKey("PropertyId");
                        });

                    b.OwnsOne("HouseFinder360.Domain.Property.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("PropertyId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("Price");

                            b1.HasKey("PropertyId");

                            b1.ToTable("Properties");

                            b1.WithOwner()
                                .HasForeignKey("PropertyId");
                        });

                    b.OwnsOne("HouseFinder360.Domain.Property.ValueObjects.PropertyAdditionalInfo", "AdditionalInfo", b1 =>
                        {
                            b1.Property<Guid>("PropertyId")
                                .HasColumnType("uuid");

                            b1.Property<DateOnly>("AvailableFrom")
                                .HasColumnType("date");

                            b1.Property<int>("BalconyNumber")
                                .HasColumnType("integer");

                            b1.Property<int>("BathroomNumber")
                                .HasColumnType("integer");

                            b1.Property<bool>("HaveKitchen")
                                .HasColumnType("boolean");

                            b1.Property<bool>("HaveParking")
                                .HasColumnType("boolean");

                            b1.Property<bool>("HaveStorage")
                                .HasColumnType("boolean");

                            b1.Property<int>("ToiletNumber")
                                .HasColumnType("integer");

                            b1.Property<DateOnly>("YearOfBuild")
                                .HasColumnType("date");

                            b1.HasKey("PropertyId");

                            b1.ToTable("Properties");

                            b1.WithOwner()
                                .HasForeignKey("PropertyId");
                        });

                    b.OwnsOne("HouseFinder360.Domain.Property.ValueObjects.PropertyType", "PropertyType", b1 =>
                        {
                            b1.Property<Guid>("PropertyId")
                                .HasColumnType("uuid");

                            b1.Property<string>("PropertyTypeDeclaration")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("PropertyTypeDeclaration");

                            b1.Property<int>("TypeOfProperty")
                                .HasColumnType("integer");

                            b1.HasKey("PropertyId");

                            b1.ToTable("Properties");

                            b1.WithOwner()
                                .HasForeignKey("PropertyId");
                        });

                    b.Navigation("AdditionalInfo")
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Area")
                        .IsRequired();

                    b.Navigation("FloorInformation")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();

                    b.Navigation("PropertyType")
                        .IsRequired();
                });

            modelBuilder.Entity("HouseFinder360.Domain.Property.Property", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
